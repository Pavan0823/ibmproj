# -*- coding: utf-8 -*-
"""ibmproj.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1u_pH7YBZ3bKhIKN934mImqWmYe3Edo62
"""

!pip install yfinance

import yfinance as yf
import pandas as pd

tesla = yf.Ticker("TSLA")
tesla_data = tesla.history(period="max")
tesla_data.reset_index(inplace=True)
tesla_data.head()

gamestop = yf.Ticker("GME")
gme_data = gamestop.history(period="max")
gme_data.reset_index(inplace=True)
gme_data.head()

import matplotlib.pyplot as plt

def make_graph(data, title):
    plt.figure(figsize=(10,5))
    plt.plot(data['Date'], data['Close'])
    plt.title(title)
    plt.xlabel('Date')
    plt.ylabel('Close Price')
    plt.show()

make_graph(tesla_data, 'Tesla Stock Price')

make_graph(gme_data, 'GameStop Stock Price')

import requests
from bs4 import BeautifulSoup
import pandas as pd

url_gme = "https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-PY0220EN-SkillsNetwork/labs/project/revenue.htm"
response_gme = requests.get(url_gme)
soup_gme = BeautifulSoup(response_gme.text, 'html.parser')

gme_revenue_data = pd.DataFrame(columns=["Year", "Revenue"])
for row in soup_gme.find("tbody").find_all("tr"):
    col = row.find_all("td")
    year = col[0].text.strip()
    revenue = col[1].text.strip()
    gme_revenue_data = pd.concat([gme_revenue_data, pd.DataFrame({"Year": [year], "Revenue": [revenue]})], ignore_index=True)

gme_revenue_data.tail()

import requests
from bs4 import BeautifulSoup
import pandas as pd

url = "https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-PY0220EN-SkillsNetwork/labs/project/revenue.htm"
response = requests.get(url)
soup = BeautifulSoup(response.text, 'html.parser')

revenue_data = pd.DataFrame(columns=["Year", "Revenue"])
for row in soup.find("tbody").find_all("tr"):
    col = row.find_all("td")
    year = col[0].text.strip()
    revenue = col[1].text.strip()
    revenue_data = pd.concat([revenue_data, pd.DataFrame({"Year": [year], "Revenue": [revenue]})], ignore_index=True)

revenue_data.tail()